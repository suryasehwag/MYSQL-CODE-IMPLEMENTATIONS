DELIMITER $$
CREATE DEFINER=`root`@`%` PROCEDURE `final_performance_generator_wrp_specified_level_co`(
p_tenant_id int,
p_template_id int,
p_changed_template int,
p_group_by_fields varchar(100),
p_number_of_fields int,
p_channel_exist int,
p_channel_flag int,
p_channel_list varchar(500),
p_organic_outlets int,
active_outlets_flag int,
p_reco_operating_cycle_id int
)
BEGIN



SET @concat_main_string:=(CASE WHEN p_number_of_fields=1 then '' else 'city ' end);

select @concat_main_string;



set @delete_query_1:=CONCAT('delete from gcpl_analysis.analysistable',@concat_main_string,' where template_id=',p_template_id);

prepare stmt from @delete_query_1;

execute stmt;

select @delete_query_1;

set @delete_query_2:=CONCAT('delete from gcpl_analysis.analysistablefinal',@concat_main_string,' where template_id=',p_template_id);

select @delete_query_2;

prepare stmt from @delete_query_2;

execute stmt;

set @delete_query_3:=CONCAT('delete from gcpl_analysis.salestable',@concat_main_string,' where template_id=',p_template_id);

prepare stmt from @delete_query_3;

execute stmt;

select @delete_query_3;

set @join_query:=(CASE WHEN p_organic_outlets=0 then '' else ' INNER JOIN gcpl_analysis.required_operating_cycle_outlet_List dopcr ON dopcr.tenant_id=frec.tenant_id and dopcr.operating_cycle_id = frec.reco_operating_cycle_id and dopcr.outlet_id=frec.outlet_id ' END);

set @join_query1:=(CASE WHEN p_organic_outlets=0 then '' else ' INNER JOIN gcpl_analysis.required_operating_cycle_outlet_List dopcr ON dopcr.tenant_id=fsoc.tenant_id and dopcr.operating_cycle_id = fsoc.operating_cycle_id and dopcr.outlet_id=fsoc.outlet_id ' END);


set @sql:=CONCAT('INSERT INTO gcpl_analysis.analysistable',@concat_main_string,' 
    SELECT ',
    p_group_by_fields,',
    COUNT(DISTINCT distributor_code) AS No_of_distributors,
    COUNT(DISTINCT city_code) AS No_of_FLP_towns,
    COUNT(DISTINCT outlet_code) AS outlet_count,
    COUNT(DISTINCT CASE WHEN reco_sales_flag IN (1,3) THEN outlet_code END) No_of_outlets_sold,
	COUNT(DISTINCT CASE WHEN reco_sales_flag IN (2,3) and outlet_status=0 THEN outlet_code END) No_of_Inactive_outlets_recommended,
    COUNT(CASE
        WHEN reco_sales_flag IN (2 , 3) THEN 1
    END) total_lines_recommended,
    COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2 , 3)
        THEN
            1
    END) AS ms_lines_recommended,
    COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2 , 3)
        THEN
            1
    END) AS cs_lines_recommended,
    COUNT(CASE
        WHEN
            sys_oos_flag = 1
                AND reco_sales_flag IN (2 , 3)
        THEN
            1
    END) AS oos_lines_recommended,
    COUNT(DISTINCT cs_outlet) AS cs_outlet_count,
    (COUNT(DISTINCT cs_outlet) / COUNT(DISTINCT outlet_code)) AS per_of_outlet_with_CS,
    COUNT(DISTINCT oos_outlet) AS oos_outlet_count,
    ((COUNT(DISTINCT outlet_code) - COUNT(DISTINCT oos_outlet)) / COUNT(DISTINCT outlet_code)) AS per_of_outlets_with_no_OOS,
    COUNT(CASE
        WHEN reco_sales_flag IN (3) THEN 1
    END) total_lines_sold_from_reco,
    COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (3)
        THEN
            1
    END) ms_lines_sold_from_reco,
    COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (3)
        THEN
            1
    END) cs_lines_sold_from_reco,
    COUNT(CASE
        WHEN
            sys_oos_flag = 1
                AND reco_sales_flag IN (3)
        THEN
            1
    END) oos_lines_sold_from_reco,
    (COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2 , 3)
                AND starline_flag_soq_greater = 1
        THEN
            1
    END) + COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND yellowline_flag_soq_greater = 1
        THEN
            1
    END)) AS overall_lines_reco_achieved,
    COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2 , 3)
                AND starline_flag_soq_greater = 1
        THEN
            1
    END) AS ms_lines_reco_achieved,
    COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND yellowline_flag_soq_greater = 1
        THEN
            1
    END) AS cs_lines_reco_achieved,
	COUNT(CASE
        WHEN
            sys_oos_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND redline_flag_soq_greater = 1
        THEN
            1
    END) AS oos_lines_reco_achieved,
    COUNT(CASE
        WHEN reco_sales_flag IN (1 , 3) THEN 1
    END) Total_Overall_Lines_Sold,
    SUM(CASE
        WHEN reco_sales_flag IN (3) THEN 1
    END) / SUM(CASE
        WHEN reco_sales_flag IN (2 , 3) THEN 1
    END) AS adherance,
    SUM(CASE
        WHEN
            reco_sales_flag IN (3)
                AND sys_ms_flag = 1
        THEN
            1
    END) / SUM(CASE
        WHEN
            reco_sales_flag IN (2 , 3)
                AND sys_ms_flag = 1
        THEN
            1
    END) AS adherance_ms,
    SUM(CASE
        WHEN
            reco_sales_flag IN (3)
                AND sys_cs_flag = 1
        THEN
            1
    END) / SUM(CASE
        WHEN
            reco_sales_flag IN (2 , 3)
                AND sys_cs_flag = 1
        THEN
            1
    END) AS adherance_cs,
    SUM(CASE
        WHEN
            reco_sales_flag IN (3)
                AND sys_oos_flag = 1
        THEN
            1
    END) / SUM(CASE
        WHEN
            reco_sales_flag IN (2 , 3)
                AND sys_oos_flag = 1
        THEN
            1
    END) AS adherance_oos,
    (COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2 , 3)
                AND starline_flag_soq_greater = 1
        THEN
            1
    END) + COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND yellowline_flag_soq_greater = 1
        THEN
            1
    END)) / COUNT(CASE
        WHEN reco_sales_flag IN (2, 3) THEN 1
    END) AS compliance,
    COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2 , 3)
                AND starline_flag_soq_greater = 1
        THEN
            1
    END) / COUNT(CASE
        WHEN
            sys_cs_flag = 0
                AND reco_sales_flag IN (2, 3)
        THEN
            1
    END) AS ms_compliance,
    COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND yellowline_flag_soq_greater = 1
        THEN
            1
    END) / COUNT(CASE
        WHEN
            sys_cs_flag = 1
                AND reco_sales_flag IN (2, 3)
        THEN
            1
    END) AS cs_compliance,
    COUNT(CASE
        WHEN
            sys_oos_flag = 1
                AND reco_sales_flag IN (2 , 3)
                AND redline_flag_soq_greater = 1
        THEN
            1
    END) / COUNT(CASE
        WHEN
            sys_oos_flag = 1
                AND reco_sales_flag IN (2, 3)
        THEN
            1
    END) oos_compliance,
    SUM(CASE
        WHEN reco_sales_flag IN (3) THEN 1
    END) / SUM(CASE
        WHEN reco_sales_flag IN (1 , 3) THEN 1
    END) AS recall,',
    p_template_id,' as template_id,now() as created_date
FROM
    (SELECT 
        tenant_id,
            reco_operating_cycle_id,
            distributor_code,
            city_code,
            outlet_code,
            outlet_status,
            channel_name,
            product_code,
            sys_ms_flag,
            sys_cs_flag,
            sys_oos_flag,
            sys_fb_flag,
            sys_rating,
            sys_soq,
            curr_soq,
            sales_units,
            sales_value,
            reco_sales_flag,
            CASE
                WHEN sys_ms_flag = 1 AND sales_units > 0 THEN 1
                ELSE 0
            END AS starline_flag,
            CASE
                WHEN sys_cs_flag = 1 AND sales_units > 0 THEN 1
                ELSE 0
            END AS yellowline_flag,
            CASE
                WHEN sys_oos_flag = 1 AND sales_units > 0 THEN 1
                ELSE 0
            END AS redline_flag,
            CASE
                WHEN
                    sys_ms_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.8 AND 1.2
                THEN
                    1
                ELSE 0
            END AS starline_flag_soq_threshold,
            CASE
                WHEN
                    sys_cs_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.8 AND 1.2
                THEN
                    1
                ELSE 0
            END AS yellowline_flag_soq_threshold,
            CASE
                WHEN
                    sys_oos_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.8 AND 1.2
                THEN
                    1
                ELSE 0
            END AS redline_flag_soq_threshold,
            CASE
                WHEN
                    sys_ms_flag = 1
                        AND sales_units / CEIL(curr_soq) >= 1
                THEN
                    1
                ELSE 0
            END AS starline_flag_soq_greater,
            CASE
                WHEN
                    sys_cs_flag = 1
                        AND sales_units / CEIL(curr_soq) >= 1
                THEN
                    1
                ELSE 0
            END AS yellowline_flag_soq_greater,
            CASE
                WHEN
                    sys_oos_flag = 1
                        AND sales_units / CEIL(curr_soq) >= 1
                THEN
                    1
                ELSE 0
            END AS redline_flag_soq_greater,
            CASE
                WHEN
                    sys_ms_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.01 AND 1
                THEN
                    1
                ELSE 0
            END AS starline_flag_soq_lesser,
            CASE
                WHEN
                    sys_cs_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.01 AND 1
                THEN
                    1
                ELSE 0
            END AS yellowline_flag_soq_lesser,
            CASE
                WHEN
                    sys_oos_flag = 1
                        AND sales_units / CEIL(curr_soq) BETWEEN 0.01 AND 1
                THEN
                    1
                ELSE 0
            END AS redline_flag_soq_lesser,
            CASE
                WHEN demand_driver_comment_1 = \'NEW_PRODUCT_LAUNCH\' THEN 1
                ELSE 0
            END AS new_products_flag,
            CASE
                WHEN sys_cs_flag = 1 THEN outlet_code
            END AS cs_outlet,
            CASE
                WHEN sys_oos_flag = 1 THEN outlet_code
            END AS oos_outlet,
            CASE
                WHEN
                    sys_ms_flag = 1
                        AND sales_units / curr_soq > 0.66
                THEN
                    1
                ELSE 0
            END AS ms_flag_soq_threshold
    FROM
        (SELECT 
        tenant_id,
            code AS reco_operating_cycle_id,
            distributor_code,
            city_name as city_code,
            outlet_code,
            outlet_status,
            channel_name,
            product_code,
            MAX(sys_ms_flag) AS sys_ms_flag,
            MAX(sys_oos_flag) AS sys_oos_flag,
            MAX(sys_cs_flag) AS sys_cs_flag,
            MAX(sys_fb_flag) AS sys_fb_flag,
            MAX(sys_rating) AS sys_rating,
            SUM(sys_soq) AS sys_soq,
            SUM(curr_soq) AS curr_soq,
            SUM(sales_units) AS sales_units,
            SUM(sales_value) AS sales_value,
            SUM(dummy_flag) AS reco_sales_flag,
            demand_driver_comment_1
    FROM
        (SELECT 
        frec.tenant_id,
            frec.reco_operating_cycle_id,
            dopc.code,
            -- ddis.lvl0_unique_cd AS distributor_code,
            ddis.distributor_code,
            dout.lvl2_unique_cd AS city_name,
            dout.lvl0_unique_cd AS outlet_code,
            dout.status as outlet_status,
            dout.lvl0_channel_name AS channel_name,
            dprd.lvl0_unique_cd AS product_code,
            frec.sys_ms_flag,
            frec.sys_cs_flag,
            frec.sys_oos_flag,
            frec.sys_fb_flag,
            frec.sys_rating,
            frec.sys_soq,
            frec.curr_soq,
            0 AS sales_units,
            0 AS sales_value,
            2 AS dummy_flag,
            demand_driver_comment_1
    FROM
        apex_edw.fact_recommendations frec
    INNER JOIN apex_edw.dim_operating_cycle dopc ON frec.reco_operating_cycle_id = dopc.id
    INNER JOIN gcpl_analysis.required_operating_cycle_list rocl on rocl.id = dopc.id
    ',@join_query,
    'INNER JOIN apex_edw.dim_outlet dout ON frec.tenant_id = dout.tenant_id
        AND frec.outlet_id = dout.id
    INNER JOIN gcpl_analysis.market_boundary_creation doutr ON doutr.market_boundary = dout.lvl2_unique_cd
    INNER JOIN apex_edw.dim_distributor ddis ON ddis.tenant_id = frec.tenant_id
        AND ddis.id = frec.distributor_id
    INNER JOIN apex_edw.dim_product dprd ON frec.tenant_id = dprd.tenant_id
        AND frec.product_id = dprd.id
    WHERE
        frec.tenant_id = 1
	    AND dout.lvl_no=0
        AND
		(CASE WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,
       '=1 THEN dout.lvl0_channel_name in ',
       p_channel_list,
	   ' WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,'=0 THEN dout.lvl0_channel_name not in ',
       p_channel_list,
	  ' WHEN ',
      p_channel_flag,'=0 THEN ',p_channel_flag,'=0 END) 
      AND
      (CASE WHEN ',
      active_outlets_flag,
      '=0 THEN ',active_outlets_flag,'=0
      WHEN ',
      active_outlets_flag,'=1
      THEN dout.status=1 END)
      
		AND frec.status = \'PUBLISH\' UNION SELECT 
        fsoc.tenant_id,
            fsoc.operating_cycle_id AS reco_operating_cycle_id,
            dopc.code,
            ddis.distributor_code,
            dout.lvl2_unique_cd AS city_name,
            dout.lvl0_unique_cd AS outlet_code,
            dout.status as outlet_status,
            dout.lvl0_channel_name AS channel_name,
            dprd.product_code,
            0 AS sys_ms_flag,
            0 AS sys_cs_flag,
            0 AS sys_oos_flag,
            0 AS sys_fb_flag,
            NULL AS sys_rating,
            0 AS sys_soq,
            0 AS curr_soq,
            fsoc.sales_units AS sales_units,
            fsoc.sales_value AS sales_value,
            1 AS dummy_flag,
            2 AS new_prod_dummy_flag
    FROM
        apex_edw.fact_sales_oc AS fsoc
    INNER JOIN apex_edw.dim_operating_cycle dopc ON fsoc.operating_cycle_id = dopc.id
    INNER JOIN gcpl_analysis.required_operating_cycle_list rocl on rocl.id = dopc.id
    ',@join_query1,
    'INNER JOIN apex_edw.dim_outlet dout ON fsoc.tenant_id=dout.tenant_id and fsoc.outlet_id = dout.id
    INNER JOIN gcpl_analysis.distinct_outlets_month_wise domw ON domw.operating_cycle_id = dopc.id AND domw.outlet_id = dout.id
    INNER JOIN gcpl_analysis.market_boundary_creation doutr1 ON doutr1.market_boundary = dout.lvl2_unique_cd
    INNER JOIN apex_edw.dim_map_outlet_distributor ddis ON ddis.tenant_id = dout.tenant_id
        AND ddis.outlet_code = dout.lvl0_unique_cd
        AND dopc.start_date >= ddis.row_start_date
        AND dopc.start_date < ddis.row_end_date
    INNER JOIN apex_edw.vw_dim_product dprd ON fsoc.tenant_id = dprd.tenant_id AND fsoc.product_id = dprd.product_id
    LEFT OUTER JOIN apex_edw.dim_map_product_relationship dprp ON dprp.tenant_id = dprd.tenant_id
        AND dprp.relationship_type = \'BASE_PRODUCT\'
        AND dprp.relationship_level = 0
        AND dprp.product_code = dprd.product_code
    WHERE
        fsoc.tenant_id = 1
		AND
        dout.lvl_no=0
        AND
	   (CASE WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,
       ' = 1 THEN dout.lvl0_channel_name in ',
       p_channel_list,
	   ' WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,'=0 THEN dout.lvl0_channel_name not in ',
       p_channel_list,
	  ' WHEN ',
      p_channel_flag,'=0 THEN ',p_channel_flag,'=0 END) 
      AND
      (CASE WHEN ',
      active_outlets_flag,
      '=0 THEN ',active_outlets_flag,'=0
      WHEN ',
      active_outlets_flag,'=1
      THEN dout.status=1 END)
            ) a
GROUP BY tenant_id , reco_operating_cycle_id , distributor_code , city_name , outlet_code ,outlet_status,channel_name , product_code) mqry) fqry
GROUP BY ',p_group_by_fields,';');

SELECT @sql;



PREPARE stmt FROM @sql;
EXECUTE stmt;
SELECT 'insertion of analysis table done';






set @sql_second:=CONCAT('INSERT INTO gcpl_analysis.salestable',@concat_main_string,' 
    SELECT ',
    p_group_by_fields,',
    count(distinct concat(outlet_code, product_code)) / count(distinct outlet_code) as "Average_Assortment",
    SUM(sales_value) AS "Sales_Value",
    SUM(sales_value) / count(distinct outlet_code) "Average_Sales_Per_Outlet",',
	p_template_id,'  as template_id,
    now() as created_date
	
    FROM(

SELECT fsoc.tenant_id,
                               
                                dopc.code AS reco_operating_cycle_id,
                                fsoc.date_id,
                              ddis.area_name,
                                ddis.distributor_code,
                                dout.lvl2_unique_cd as city_code,
                                dout.lvl0_unique_cd as outlet_code,
                                dout.lvl0_channel_name as channel_name,
                                CASE WHEN dprp.base_product_code IS NULL THEN dprd.product_code ELSE dprp.base_product_code END AS product_code,
                                fsoc.sales_units as sales_units,
                                fsoc.sales_value as sales_value
    FROM
        apex_edw.fact_sales AS fsoc
    INNER JOIN apex_edw.dim_operating_cycle dopc ON fsoc.operating_cycle_id = dopc.id
    INNER JOIN gcpl_analysis.required_operating_cycle_list rocl on rocl.id = dopc.id
    ',@join_query1,
    'INNER JOIN apex_edw.dim_outlet dout ON fsoc.outlet_id = dout.id
    INNER JOIN gcpl_analysis.distinct_outlets_month_wise domw ON domw.operating_cycle_id = dopc.id AND domw.outlet_id = dout.id
    INNER JOIN gcpl_analysis.market_boundary_creation doutr1 ON doutr1.market_boundary = dout.lvl2_unique_cd
    INNER JOIN apex_edw.dim_map_outlet_distributor dmod ON dmod.tenant_id = dout.tenant_id
        AND dmod.outlet_code = dout.lvl0_unique_cd
        AND dopc.start_date >= dmod.row_start_date
        AND dopc.start_date < dmod.row_end_date
	INNER JOIN
                                apex_edw.vw_dim_distributor ddis
                ON
                                ddis.tenant_id = dmod.tenant_id
                AND       ddis.distributor_code = dmod.distributor_code
                AND dopc.start_date >= ddis.row_start_date 
                AND dopc.start_date < ddis.row_end_date
    INNER JOIN apex_edw.vw_dim_product dprd ON fsoc.tenant_id = dprd.tenant_id AND fsoc.product_id = dprd.product_id
    LEFT OUTER JOIN apex_edw.dim_map_product_relationship dprp ON dprp.tenant_id = dprd.tenant_id
        AND dprp.relationship_type = \'BASE_PRODUCT\'
        AND dprp.relationship_level = 0
        AND dprp.product_code = dprd.product_code
    WHERE
        fsoc.tenant_id = 1
		AND
        dout.lvl_no=0
        AND
	   (CASE WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,
       ' = 1 THEN dout.lvl0_channel_name in ',
       p_channel_list,
	   ' WHEN ',
       p_channel_flag,
       ' = 1 AND ',
       p_channel_exist,'=0 THEN dout.lvl0_channel_name not in ',
       p_channel_list,
	  ' WHEN ',
      p_channel_flag,'=0 THEN ',p_channel_flag,'=0 END) 
      AND
      (CASE WHEN ',
      active_outlets_flag,
      '=0 THEN ',active_outlets_flag,'=0
      WHEN ',
      active_outlets_flag,'=1
      THEN dout.status=1 END)
            ) a
GROUP BY ',p_group_by_fields,';');

SELECT @sql_second;

PREPARE stmt FROM @sql_second;
EXECUTE stmt;
SELECT 'insertion of sales table done';


set @sql1:=CONCAT('insert into gcpl_analysis.analysistablefinal',@concat_main_string,'
select ',p_group_by_fields,',Total_Lines,\'Total_Lines\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Total_Lines_Reco_and_sold,\'Total_Lines_Reco_and_sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Total_Overall_Lines_Sold,\'Total_Overall_Lines_Sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Overall_Adherence,\'Overall_Adherence\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Overall_compliance,\'Overall_compliance\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Overall_Recall,\'Overall_Recall\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Overall_Reco_and_sold_with_Quantity,\'Overall_Reco_and_sold_with_Quantity\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',No_of_distributors,\'No_of_distributors\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',No_of_FLP_towns,\'No_of_TLP_towns\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',No_Of_outlets,\'No_of_outlets\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',No_Of_outlets_sold,\'No_of_outlets_sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',No_of_Inactive_outlets_recommended,\'No_of_Inactive_outlets_recommended\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',MS_Adherence,\'MS_Adherence\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',MS_compliance,\'MS_compliance\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',MS_Lines,\'MS_Lines\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',MS_Reco_and_sold,\'MS_Reco_and_sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',MS_Reco_and_sold_with_Quantity,\'MS_Reco_and_sold_with_Quantity\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_Adherence,\'CS_Adherence\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_compliance,\'CS_compliance\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_Lines,\'CS_Lines\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_Outlets_as_percent_of_Total,\'CS_Outlets_as_percent_of_Total\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_Reco_and_sold,\'CS_Reco_and_sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',CS_Reco_and_sold_with_Quantity,\'CS_Reco_and_sold_with_Quantity\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Outlets_with_cs,\'Outlets_with_cs\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',OOS_Adherence,\'OOS_Adherence\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',OOS_compliance,\'OOS_compliance\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',OOS_Lines,\'OOS_Lines\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',OOS_Reco_and_sold,\'OOS_Reco_and_sold\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',OOS_Reco_and_sold_Quantity,\'OOS_Reco_and_sold_Quantity\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',percent_of_outlets_with_no_OOS,\'percent_of_outlets_with_no_OOS\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Outlets_with_oos,\'Outlets_with_oos\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.analysistable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Average_Assortment,\'Average_Assortment\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.salestable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Sales_Value,\'Sales_Value\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.salestable',@concat_main_string,
' where
template_id=',p_template_id,
' union all
select ',p_group_by_fields,',Average_Sales_Per_Outlet,\'Average_Sales_Per_Outlet\' as field_value,',p_template_id,' as template_id,now() as created_date from 
gcpl_analysis.salestable',@concat_main_string,
' where
template_id=',p_template_id,';');


select @sql1;

PREPARE stmt FROM @sql1;
EXECUTE stmt;

SELECT 'table is made ready for final report generation';

IF p_number_of_fields=1

THEN

CALL gcpl_analysis.final_sales_performance_generator(p_changed_template,p_template_id);

SELECT CONCAT('final pivot report is generated for ',p_template_id);

END IF;

END$$
DELIMITER ;
